.. _spyder_waf:

Using Spyder with Waf
=====================

Spyder is a useful IDE for developing scientific Python code -- it has been specifically developed for this purpose and has first-class support for data structures like NumPy arrays and pandas dataframes.

In the context of the `Economics Project Templates <http://hmgaudecker.github.io/econ-project-templates/>`_, there are just two issues to consider that are described below.


Debugging wscript files
------------------------

Sometimes it is helpful to debug your build code directly. As the wscript files are just pure Python code Spyder can handle them in principle. The tricky bit is to make Spyder recognise the them as Python scripts -- usually it just uses the extension ``.py`` to infer that fact. As you cannot simply add this extension to wscript files, you must tell Spyder inside the wscript file using a so-called "shebang". Simply add the following line as the first thing to all your wscripts::

    #! python

You can then set breakpoints inside your wscript files and debug them by running waf.py from inside spyder (just make sure you ran ``python waf.py configure`` beforehand).


Setting the PYTHONPATH
-----------------------

The machinery of the `Economics Project Templates <http://hmgaudecker.github.io/econ-project-templates/>`_ requires the PYTHONPATH environmental variable to the project root. 

In order to do so, first create a Spyder project in the directory where you want your research to be (click "Yes" on the question "The following directory is not empty: ... Do you want to continue?"). Then right-click on the project's root folder and select "Add to PYTHONPATH".

   .. image:: spyder_pythonpath.png
       :width: 12cm

Any ``ImportErrors`` are likely due to this not being done correctly.
